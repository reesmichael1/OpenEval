#############################################################################
# Makefile for building: OpenEval
# Generated by qmake (2.01a) (Qt 4.8.3) on: Wed Nov 28 11:54:18 2012
# Project:  ../Source/OpenEval.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt/mkspecs/linux-g++ -o Makefile ../Source/OpenEval.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -march=i686 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -march=i686 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I../Source -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I. -I../Source -I.
LINK          = g++
LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ../Source/main.cpp \
		../Source/fileoperations.cpp \
		../Source/OpenEval.cpp \
		../Source/newemployee.cpp \
		../Source/newemployer.cpp \
		../Source/reviewemployee.cpp \
		../Source/employerinfo.cpp \
		../Source/employeeinfo.cpp \
		../Source/findemployee.cpp \
		../Source/findemployer.cpp moc_OpenEval.cpp \
		moc_NewEmployee.cpp \
		moc_NewEmployer.cpp \
		moc_ReviewEmployee.cpp \
		moc_EmployerInfo.cpp \
		moc_EmployeeInfo.cpp \
		moc_FindEmployee.cpp \
		moc_FindEmployer.cpp
OBJECTS       = main.o \
		fileoperations.o \
		OpenEval.o \
		newemployee.o \
		newemployer.o \
		reviewemployee.o \
		employerinfo.o \
		employeeinfo.o \
		findemployee.o \
		findemployer.o \
		moc_OpenEval.o \
		moc_NewEmployee.o \
		moc_NewEmployer.o \
		moc_ReviewEmployee.o \
		moc_EmployerInfo.o \
		moc_EmployeeInfo.o \
		moc_FindEmployee.o \
		moc_FindEmployer.o
DIST          = /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		../Source/OpenEval.pro
QMAKE_TARGET  = OpenEval
DESTDIR       = 
TARGET        = OpenEval

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: ../Source/OpenEval.pro  /usr/share/qt/mkspecs/linux-g++/qmake.conf /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++ -o Makefile ../Source/OpenEval.pro
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/common/gcc-base.conf:
/usr/share/qt/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt/mkspecs/common/g++-base.conf:
/usr/share/qt/mkspecs/common/g++-unix.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/release.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++ -o Makefile ../Source/OpenEval.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/OpenEval1.0.0 || $(MKDIR) .tmp/OpenEval1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/OpenEval1.0.0/ && $(COPY_FILE) --parents ../Source/FileOperations.h ../Source/OpenEval.h ../Source/NewEmployee.h ../Source/NewEmployer.h ../Source/ReviewEmployee.h ../Source/EmployerInfo.h ../Source/EmployeeInfo.h ../Source/FindEmployee.h ../Source/FindEmployer.h .tmp/OpenEval1.0.0/ && $(COPY_FILE) --parents ../Source/main.cpp ../Source/fileoperations.cpp ../Source/OpenEval.cpp ../Source/newemployee.cpp ../Source/newemployer.cpp ../Source/reviewemployee.cpp ../Source/employerinfo.cpp ../Source/employeeinfo.cpp ../Source/findemployee.cpp ../Source/findemployer.cpp .tmp/OpenEval1.0.0/ && (cd `dirname .tmp/OpenEval1.0.0` && $(TAR) OpenEval1.0.0.tar OpenEval1.0.0 && $(COMPRESS) OpenEval1.0.0.tar) && $(MOVE) `dirname .tmp/OpenEval1.0.0`/OpenEval1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/OpenEval1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_OpenEval.cpp moc_NewEmployee.cpp moc_NewEmployer.cpp moc_ReviewEmployee.cpp moc_EmployerInfo.cpp moc_EmployeeInfo.cpp moc_FindEmployee.cpp moc_FindEmployer.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_OpenEval.cpp moc_NewEmployee.cpp moc_NewEmployer.cpp moc_ReviewEmployee.cpp moc_EmployerInfo.cpp moc_EmployeeInfo.cpp moc_FindEmployee.cpp moc_FindEmployer.cpp
moc_OpenEval.cpp: ../Source/NewEmployee.h \
		../Source/FileOperations.h \
		../Source/NewEmployer.h \
		../Source/ReviewEmployee.h \
		../Source/EmployerInfo.h \
		../Source/EmployeeInfo.h \
		../Source/FindEmployee.h \
		../Source/FindEmployer.h \
		../Source/OpenEval.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../Source/OpenEval.h -o moc_OpenEval.cpp

moc_NewEmployee.cpp: ../Source/FileOperations.h \
		../Source/NewEmployee.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../Source/NewEmployee.h -o moc_NewEmployee.cpp

moc_NewEmployer.cpp: ../Source/FileOperations.h \
		../Source/NewEmployer.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../Source/NewEmployer.h -o moc_NewEmployer.cpp

moc_ReviewEmployee.cpp: ../Source/FileOperations.h \
		../Source/ReviewEmployee.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../Source/ReviewEmployee.h -o moc_ReviewEmployee.cpp

moc_EmployerInfo.cpp: ../Source/FileOperations.h \
		../Source/EmployerInfo.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../Source/EmployerInfo.h -o moc_EmployerInfo.cpp

moc_EmployeeInfo.cpp: ../Source/FileOperations.h \
		../Source/EmployeeInfo.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../Source/EmployeeInfo.h -o moc_EmployeeInfo.cpp

moc_FindEmployee.cpp: ../Source/FileOperations.h \
		../Source/FindEmployee.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../Source/FindEmployee.h -o moc_FindEmployee.cpp

moc_FindEmployer.cpp: ../Source/FileOperations.h \
		../Source/FindEmployer.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../Source/FindEmployer.h -o moc_FindEmployer.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: ../Source/main.cpp ../Source/OpenEval.h \
		../Source/NewEmployee.h \
		../Source/FileOperations.h \
		../Source/NewEmployer.h \
		../Source/ReviewEmployee.h \
		../Source/EmployerInfo.h \
		../Source/EmployeeInfo.h \
		../Source/FindEmployee.h \
		../Source/FindEmployer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o ../Source/main.cpp

fileoperations.o: ../Source/fileoperations.cpp ../Source/FileOperations.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fileoperations.o ../Source/fileoperations.cpp

OpenEval.o: ../Source/OpenEval.cpp ../Source/OpenEval.h \
		../Source/NewEmployee.h \
		../Source/FileOperations.h \
		../Source/NewEmployer.h \
		../Source/ReviewEmployee.h \
		../Source/EmployerInfo.h \
		../Source/EmployeeInfo.h \
		../Source/FindEmployee.h \
		../Source/FindEmployer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o OpenEval.o ../Source/OpenEval.cpp

newemployee.o: ../Source/newemployee.cpp ../Source/NewEmployee.h \
		../Source/FileOperations.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o newemployee.o ../Source/newemployee.cpp

newemployer.o: ../Source/newemployer.cpp ../Source/NewEmployer.h \
		../Source/FileOperations.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o newemployer.o ../Source/newemployer.cpp

reviewemployee.o: ../Source/reviewemployee.cpp ../Source/ReviewEmployee.h \
		../Source/FileOperations.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o reviewemployee.o ../Source/reviewemployee.cpp

employerinfo.o: ../Source/employerinfo.cpp ../Source/EmployerInfo.h \
		../Source/FileOperations.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o employerinfo.o ../Source/employerinfo.cpp

employeeinfo.o: ../Source/employeeinfo.cpp ../Source/EmployeeInfo.h \
		../Source/FileOperations.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o employeeinfo.o ../Source/employeeinfo.cpp

findemployee.o: ../Source/findemployee.cpp ../Source/FindEmployee.h \
		../Source/FileOperations.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o findemployee.o ../Source/findemployee.cpp

findemployer.o: ../Source/findemployer.cpp ../Source/FindEmployer.h \
		../Source/FileOperations.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o findemployer.o ../Source/findemployer.cpp

moc_OpenEval.o: moc_OpenEval.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_OpenEval.o moc_OpenEval.cpp

moc_NewEmployee.o: moc_NewEmployee.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_NewEmployee.o moc_NewEmployee.cpp

moc_NewEmployer.o: moc_NewEmployer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_NewEmployer.o moc_NewEmployer.cpp

moc_ReviewEmployee.o: moc_ReviewEmployee.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ReviewEmployee.o moc_ReviewEmployee.cpp

moc_EmployerInfo.o: moc_EmployerInfo.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_EmployerInfo.o moc_EmployerInfo.cpp

moc_EmployeeInfo.o: moc_EmployeeInfo.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_EmployeeInfo.o moc_EmployeeInfo.cpp

moc_FindEmployee.o: moc_FindEmployee.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_FindEmployee.o moc_FindEmployee.cpp

moc_FindEmployer.o: moc_FindEmployer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_FindEmployer.o moc_FindEmployer.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

